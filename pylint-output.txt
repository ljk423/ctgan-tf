************* Module ctgan
ctgan/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module ctgan.__main__
ctgan/__main__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module ctgan.losses._conditional_loss
ctgan/losses/_conditional_loss.py:7:0: C0103: Argument name "c" doesn't conform to snake_case naming style (invalid-name)
ctgan/losses/_conditional_loss.py:7:0: C0103: Argument name "m" doesn't conform to snake_case naming style (invalid-name)
************* Module ctgan.losses._gradient_penalty
ctgan/losses/_gradient_penalty.py:7:0: C0103: Argument name "f" doesn't conform to snake_case naming style (invalid-name)
ctgan/losses/_gradient_penalty.py:55:30: C0103: Variable name "t" doesn't conform to snake_case naming style (invalid-name)
ctgan/losses/_gradient_penalty.py:62:4: C0103: Variable name "gp" doesn't conform to snake_case naming style (invalid-name)
************* Module ctgan.data_modules._sampler
ctgan/data_modules/_sampler.py:7:0: R0205: Class 'Sampler' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
ctgan/data_modules/_sampler.py:35:8: C0103: Variable name "st" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_sampler.py:39:16: C0103: Variable name "st" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_sampler.py:44:20: C0103: Variable name "st" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_sampler.py:47:16: C0103: Variable name "ed" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_sampler.py:53:16: C0103: Variable name "st" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_sampler.py:59:4: C0103: Argument name "n" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_sampler.py:88:12: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_sampler.py:88:15: C0103: Variable name "o" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_sampler.py:7:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module ctgan.data_modules._transformer
ctgan/data_modules/_transformer.py:14:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
ctgan/data_modules/_transformer.py:14:0: R0205: Class 'DataTransformer' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
ctgan/data_modules/_transformer.py:67:8: C0103: Variable name "dt" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:104:8: C0103: Variable name "st" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:107:12: C0103: Variable name "ed" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:117:12: C0103: Variable name "st" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:152:8: C0103: Variable name "gm" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:170:4: R0201: Method could be a function (no-self-use)
ctgan/data_modules/_transformer.py:290:12: C0103: Variable name "pp" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:291:12: C0103: Variable name "pp" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:302:4: R0201: Method could be a function (no-self-use)
ctgan/data_modules/_transformer.py:374:8: C0103: Variable name "u" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:375:8: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:378:12: C0103: Variable name "u" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:380:8: C0103: Variable name "u" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:383:8: C0103: Variable name "v" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_transformer.py:393:4: R0201: Method could be a function (no-self-use)
************* Module ctgan.data_modules._conditional
ctgan/data_modules/_conditional.py:7:0: R0205: Class 'ConditionalGenerator' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
ctgan/data_modules/_conditional.py:54:8: C0103: Variable name "dt" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_conditional.py:69:12: R1724: Unnecessary "elif" after "continue" (no-else-continue)
ctgan/data_modules/_conditional.py:98:12: R1724: Unnecessary "elif" after "continue" (no-else-continue)
ctgan/data_modules/_conditional.py:58:4: R0915: Too many statements (52/50) (too-many-statements)
ctgan/data_modules/_conditional.py:123:8: C0103: Variable name "a" doesn't conform to snake_case naming style (invalid-name)
ctgan/data_modules/_conditional.py:124:8: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
************* Module ctgan.models._critic
ctgan/models/_critic.py:69:0: W0613: Unused argument 'kwargs' (unused-argument)
ctgan/models/_critic.py:11:0: R0903: Too few public methods (1/2) (too-few-public-methods)
ctgan/models/_critic.py:6:0: C0411: standard import "from functools import partial" should be placed before "import tensorflow as tf" (wrong-import-order)
************* Module ctgan.models._generator
ctgan/models/_generator.py:57:4: R0913: Too many arguments (6/5) (too-many-arguments)
ctgan/models/_generator.py:10:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module ctgan.synthesizer._bar_utils
ctgan/synthesizer/_bar_utils.py:47:4: R0913: Too many arguments (6/5) (too-many-arguments)
ctgan/synthesizer/_bar_utils.py:65:4: W0221: Parameters differ from overridden 'update' method (arguments-differ)
ctgan/synthesizer/_bar_utils.py:73:12: C0103: Variable name "m" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_bar_utils.py:77:4: W0235: Useless super delegation in method 'close' (useless-super-delegation)
ctgan/synthesizer/_bar_utils.py:8:0: C0411: standard import "from functools import reduce" should be placed before "from tqdm.autonotebook import tqdm" (wrong-import-order)
************* Module ctgan.synthesizer._synthesizer
ctgan/synthesizer/_synthesizer.py:24:0: R0902: Too many instance attributes (17/7) (too-many-instance-attributes)
ctgan/synthesizer/_synthesizer.py:137:4: R0913: Too many arguments (11/5) (too-many-arguments)
ctgan/synthesizer/_synthesizer.py:177:4: R0914: Too many local variables (19/15) (too-many-locals)
ctgan/synthesizer/_synthesizer.py:241:49: W0212: Access to a protected member _input_dim of a client class (protected-access)
ctgan/synthesizer/_synthesizer.py:242:46: W0212: Access to a protected member _input_dim of a client class (protected-access)
ctgan/synthesizer/_synthesizer.py:247:12: C0102: Black listed name "bar" (blacklisted-name)
ctgan/synthesizer/_synthesizer.py:250:24: C0103: Variable name "gp" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:260:24: C0103: Variable name "m" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:287:34: C0103: Variable name "t" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:291:12: C0103: Variable name "gp" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:321:12: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:321:16: C0103: Variable name "m1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:322:12: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:325:12: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:325:16: C0103: Variable name "m1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:326:12: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:333:12: C0103: Variable name "c2" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:321:16: W0612: Unused variable 'm1' (unused-variable)
ctgan/synthesizer/_synthesizer.py:366:34: C0103: Variable name "t" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:367:12: W0612: Unused variable 'fake' (unused-variable)
ctgan/synthesizer/_synthesizer.py:380:4: C0103: Argument name "c1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:380:4: C0103: Argument name "m1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:407:34: C0103: Variable name "t" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:442:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:442:12: C0103: Variable name "m1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:443:8: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:444:8: C0103: Variable name "m1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:442:16: W0612: Unused variable 'col' (unused-variable)
ctgan/synthesizer/_synthesizer.py:442:21: W0612: Unused variable 'opt' (unused-variable)
ctgan/synthesizer/_synthesizer.py:449:4: C0103: Argument name "n" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:476:16: C0103: Variable name "c1" doesn't conform to snake_case naming style (invalid-name)
ctgan/synthesizer/_synthesizer.py:516:11: C1801: Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty (len-as-condition)
ctgan/synthesizer/_synthesizer.py:578:49: W0212: Access to a protected member _input_dim of a client class (protected-access)
ctgan/synthesizer/_synthesizer.py:16:0: C0411: standard import "from functools import partial" should be placed before "import joblib" (wrong-import-order)
************* Module ctgan.cli._cli
ctgan/cli/_cli.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module ctgan.layers._residual
ctgan/layers/_residual.py:11:0: R0903: Too few public methods (1/2) (too-few-public-methods)
ctgan/layers/_residual.py:7:0: C0411: third party import "import tensorflow as tf" should be placed before "from ._layer_utils import init_bounded" (wrong-import-order)
ctgan/layers/_residual.py:8:0: C0411: standard import "from functools import partial" should be placed before "import tensorflow as tf" (wrong-import-order)
************* Module ctgan.layers._gen_activation
ctgan/layers/_gen_activation.py:113:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
ctgan/layers/_gen_activation.py:118:12: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
ctgan/layers/_gen_activation.py:81:4: R0201: Method could be a function (no-self-use)
ctgan/layers/_gen_activation.py:12:0: R0903: Too few public methods (1/2) (too-few-public-methods)
ctgan/layers/_gen_activation.py:7:0: C0411: third party import "import tensorflow as tf" should be placed before "from ._layer_utils import init_bounded" (wrong-import-order)
ctgan/layers/_gen_activation.py:8:0: C0411: third party import "import tensorflow_probability as tfp" should be placed before "from ._layer_utils import init_bounded" (wrong-import-order)
ctgan/layers/_gen_activation.py:9:0: C0411: standard import "from functools import partial" should be placed before "import tensorflow as tf" (wrong-import-order)
ctgan/layers/_gen_activation.py:1:0: R0801: Similar lines in 2 files
==ctgan.models._critic:89
==ctgan.models._generator:68
    def call(self, inputs, **kwargs):
        """Feedforward pass on the network layers.

        Parameters
        ----------
        inputs: tf.Tensor
            Input data tensor.

        kwargs: dict
            Dictionary with functions options. Mainly used to set
            ``training=True`` when training the network layers.

        Returns
        -------
        tf.Tensor
            The output tensor resultant from the feedforward pass.
        """
        outputs = inputs
        for layer in self._model:
            outputs = layer(outputs, **kwargs)
        return outputs (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 8.53/10 (previous run: 8.53/10, +0.00)

